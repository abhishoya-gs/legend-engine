type Firm {
  legalName: String!
  employees: [Person!]!
  addresses: [Address!]!
  count: Int!
}
input Firm_bool_exp {
  legalName: String_comparison_exp
  employees: [Person_exists_exp!]
  addresses: [Address_exists_exp!]
  count: Int_comparison_exp
  _and: [Firm_bool_exp!]
  _or: [Firm_bool_exp!]
  _not: Firm_bool_exp
}
input Firm_exists_exp {
  _exists: Firm_bool_exp
}
input BigDecimal_comparison_exp {
  _eq: BigDecimal!
}
input Boolean_comparison_exp {
  _eq: Boolean!
}
input DateTime_comparison_exp {
  _eq: DateTime!
}
input Date_comparison_exp {
  _eq: Date!
}
input Float_comparison_exp {
  _eq: Float!
}
input Int_comparison_exp {
  _eq: Int!
}
input StrictDate_comparison_exp {
  _eq: StrictDate!
}
input String_comparison_exp {
  _eq: String!
}